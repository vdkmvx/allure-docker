{"name": "POST /reglaments", "status": "failed", "statusDetails": {"message": "AssertionError: assert 201 == 400\n +  where 201 = <Response [201]>.status_code", "trace": "login_reglaments = <requests.sessions.Session object at 0x00000191D30434D0>, name = ''\n\n    @allure.title(\"POST /reglaments\")\n    @pytest.mark.parametrize(\"name\", invalid_names)\n    def test_6_create_reglament(login_reglaments, name):\n        space = login_reglaments.get(HOST + \"/spaces\").json()[0]\n        reglament_column_id = space[\"reglamentColumns\"][0][\"id\"]\n        response = login_reglaments.post(\n            HOST + \"/reglaments\",\n            json={\n                \"name\": name,\n                \"reglamentColumnId\": reglament_column_id,\n                \"content\": \"string\",\n                \"order\": 0,\n            },\n        )\n>       assert response.status_code == 400\nE       assert 201 == 400\nE        +  where 201 = <Response [201]>.status_code\n\ntests\\6 test_reglaments\\test_reglaments.py:97: AssertionError"}, "parameters": [{"name": "name", "value": "''"}], "start": 1694699020699, "stop": 1694699020751, "uuid": "6bc58099-cfe7-4dbb-a8f8-0ae022d33183", "historyId": "4ae41758c771eea6badef5a9bb232cee", "testCaseId": "4ae41758c771eea6badef5a9bb232cee", "fullName": "tests.6 test_reglaments.test_reglaments#test_6_create_reglament", "labels": [{"name": "parentSuite", "value": "tests.6 test_reglaments"}, {"name": "suite", "value": "test_reglaments"}, {"name": "host", "value": "WIN-V4MLJNPG1BI"}, {"name": "thread", "value": "15844-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.6 test_reglaments.test_reglaments"}]}