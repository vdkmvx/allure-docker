{"name": "POST /reglaments", "status": "failed", "statusDetails": {"message": "AssertionError: assert 500 == 400\n +  where 500 = <Response [500]>.status_code", "trace": "login_reglaments = <requests.sessions.Session object at 0x000001F709A3B410>, reglament_column_id = 111\n\n    @allure.title(\"POST /reglaments\")\n    @pytest.mark.parametrize(\"reglament_column_id\", valid_ids)\n    def test_4_create_reglament(login_reglaments, reglament_column_id):\n        response = login_reglaments.post(\n            HOST + \"/reglaments\",\n            json={\n                \"name\": \"string\",\n                \"reglamentColumnId\": reglament_column_id,\n                \"content\": \"string\",\n                \"order\": 0,\n            },\n        )\n>       assert response.status_code == 400\nE       assert 500 == 400\nE        +  where 500 = <Response [500]>.status_code\n\ntests\\6 test_reglaments\\test_reglaments.py:63: AssertionError"}, "parameters": [{"name": "reglament_column_id", "value": "111"}], "start": 1694700126963, "stop": 1694700126972, "uuid": "2749fac7-3037-48ea-9bfe-7b554700a473", "historyId": "e547f76e3f5cffd74c0751c1b1fceeba", "testCaseId": "7df0468ff26bc01cf18bc77dc13558b6", "fullName": "tests.6 test_reglaments.test_reglaments#test_4_create_reglament", "labels": [{"name": "parentSuite", "value": "tests.6 test_reglaments"}, {"name": "suite", "value": "test_reglaments"}, {"name": "host", "value": "WIN-V4MLJNPG1BI"}, {"name": "thread", "value": "5128-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.6 test_reglaments.test_reglaments"}]}