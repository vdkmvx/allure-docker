{"name": "POST /spaces/space_id/columns", "status": "failed", "statusDetails": {"message": "AssertionError: assert 403 == 400\n +  where 403 = <Response [403]>.status_code", "trace": "login_spaces = <requests.sessions.Session object at 0x000001B1A22681D0>, space_id = 666\n\n    @allure.title(\"POST /spaces/space_id/columns\")\n    @pytest.mark.parametrize(\"space_id\", valid_ids)\n    def test_50_create_column_into_invalid_space(login_spaces, space_id):\n        response = login_spaces.post(\n            HOST + f\"/spaces/{space_id}/columns\", json={\"name\": \"Колонка\", \"order\": 2}\n        )\n>       assert response.status_code == 400\nE       assert 403 == 400\nE        +  where 403 = <Response [403]>.status_code\n\ntests\\3 test_spaces\\test_spaces.py:473: AssertionError"}, "parameters": [{"name": "space_id", "value": "666"}], "start": 1694611962614, "stop": 1694611962622, "uuid": "dfcad4b9-fa7c-4b8b-b8b3-711582ae8ba5", "historyId": "831d32f5f57f21b27132849dbbd23683", "testCaseId": "9a0983a1dcfd14a08ccf6e6bb3e259ce", "fullName": "tests.3 test_spaces.test_spaces#test_50_create_column_into_invalid_space", "labels": [{"name": "parentSuite", "value": "tests.3 test_spaces"}, {"name": "suite", "value": "test_spaces"}, {"name": "host", "value": "WIN-V4MLJNPG1BI"}, {"name": "thread", "value": "12412-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.3 test_spaces.test_spaces"}]}