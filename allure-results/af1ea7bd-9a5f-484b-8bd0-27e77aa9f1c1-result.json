{"name": "POST /reglaments", "status": "failed", "statusDetails": {"message": "AssertionError: assert 500 == 400\n +  where 500 = <Response [500]>.status_code", "trace": "login_reglaments = <requests.sessions.Session object at 0x0000022C631F3190>, order = 122222222222222222...2222222222222222222\n\n    @allure.title('POST /reglaments')\n    @pytest.mark.parametrize('order', invalid_orders)\n    def test_7_create_reglament(login_reglaments, order):\n        space = login_reglaments.get(HOST + '/spaces').json()[0]\n        reglament_column_id = space[\"reglamentColumns\"][0][\"id\"]\n        response = login_reglaments.post(HOST + '/reglaments', json={\n            \"name\": \"string\",\n            \"reglamentColumnId\": reglament_column_id,\n            \"content\": \"string\",\n            \"order\": order\n        })\n>       assert response.status_code == 400\nE       assert 500 == 400\nE        +  where 500 = <Response [500]>.status_code\n\ntests\\6 test_reglaments\\test_reglaments.py:91: AssertionError"}, "parameters": [{"name": "order", "value": "12222222222222222222222222222222222222222222222222222222222222222222222222222222222"}], "start": 1694693663279, "stop": 1694693663343, "uuid": "cdf96b2e-c357-4def-9f6d-0d9216d6b4a2", "historyId": "a87b8e388ab7bb2524c37315f25ee847", "testCaseId": "c5369ed45f07b07ee6511d6e8430a93e", "fullName": "tests.6 test_reglaments.test_reglaments#test_7_create_reglament", "labels": [{"name": "parentSuite", "value": "tests.6 test_reglaments"}, {"name": "suite", "value": "test_reglaments"}, {"name": "host", "value": "WIN-V4MLJNPG1BI"}, {"name": "thread", "value": "15044-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.6 test_reglaments.test_reglaments"}]}