{"name": "PATCH /reglaments/reglament_id/changeReglamentColumnAndOrder", "status": "failed", "statusDetails": {"message": "AssertionError: assert 500 == 200\n +  where 500 = <Response [500]>.status_code", "trace": "login_reglaments = <requests.sessions.Session object at 0x0000019203BC0350>, order = 122222222222222222...2222222222222222222\n\n    @allure.title(\"PATCH /reglaments/reglament_id/changeReglamentColumnAndOrder\")\n    @pytest.mark.parametrize(\"order\", invalid_orders)\n    def test_36_change_reglament_column_and_order(login_reglaments, order):\n        reglament = login_reglaments.get(HOST + \"/reglaments\").json()[0]\n        reglament_id = reglament[\"id\"]\n        space = login_reglaments.get(HOST + \"/spaces\").json()[0]\n        reglament_column_id = space[\"reglamentColumns\"][0][\"id\"]\n        response = login_reglaments.patch(\n            HOST + f\"/reglaments/{reglament_id}/changeReglamentColumnAndOrder\",\n            json={\"columnId\": reglament_column_id, \"order\": order},\n        )\n>       assert response.status_code == 200\nE       assert 500 == 200\nE        +  where 500 = <Response [500]>.status_code\n\ntests\\6 test_reglaments\\test_reglaments.py:386: AssertionError"}, "parameters": [{"name": "order", "value": "12222222222222222222222222222222222222222222222222222222222222222222222222222222222"}], "start": 1694700003518, "stop": 1694700003578, "uuid": "69eb8c13-a4a6-4371-91bc-1eedf47aa2e5", "historyId": "ab9b19d1e27e794b47cf105a7d104b53", "testCaseId": "6c90049e813a533d4c38f49b4ee436bf", "fullName": "tests.6 test_reglaments.test_reglaments#test_36_change_reglament_column_and_order", "labels": [{"name": "parentSuite", "value": "tests.6 test_reglaments"}, {"name": "suite", "value": "test_reglaments"}, {"name": "host", "value": "WIN-V4MLJNPG1BI"}, {"name": "thread", "value": "17256-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.6 test_reglaments.test_reglaments"}]}