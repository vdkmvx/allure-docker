{"name": "PATCH /reglaments/reglament_id/changeReglamentColumnAndOrder", "status": "failed", "statusDetails": {"message": "AssertionError: assert 404 == 400\n +  where 404 = <Response [404]>.status_code", "trace": "login_reglaments = <requests.sessions.Session object at 0x000001F709A3B410>, reglament_id = -10\n\n    @allure.title(\"PATCH /reglaments/reglament_id/changeReglamentColumnAndOrder\")\n    @pytest.mark.parametrize(\"reglament_id\", invalid_space_id)\n    def test_38_change_reglament_column_and_order(login_reglaments, reglament_id):\n        space = login_reglaments.get(HOST + \"/spaces\").json()[0]\n        reglament_column_id = space[\"reglamentColumns\"][0][\"id\"]\n        response = login_reglaments.patch(\n            HOST + f\"/reglaments/{reglament_id}/changeReglamentColumnAndOrder\",\n            json={\"columnId\": reglament_column_id, \"order\": 0},\n        )\n>       assert response.status_code == 400\nE       assert 404 == 400\nE        +  where 404 = <Response [404]>.status_code\n\ntests\\6 test_reglaments\\test_reglaments.py:412: AssertionError"}, "parameters": [{"name": "reglament_id", "value": "-10"}], "start": 1694700130953, "stop": 1694700130982, "uuid": "03fba001-81e7-4f1a-a6f0-e73b94f600bc", "historyId": "449ec9fa7e2a21e425e677e6f6ef25f1", "testCaseId": "be966e0ac93f8e4e28cef5ab03854c56", "fullName": "tests.6 test_reglaments.test_reglaments#test_38_change_reglament_column_and_order", "labels": [{"name": "parentSuite", "value": "tests.6 test_reglaments"}, {"name": "suite", "value": "test_reglaments"}, {"name": "host", "value": "WIN-V4MLJNPG1BI"}, {"name": "thread", "value": "5128-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.6 test_reglaments.test_reglaments"}]}