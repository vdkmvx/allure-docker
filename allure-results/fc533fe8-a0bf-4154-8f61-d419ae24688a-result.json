{"name": "POST /reglaments", "status": "failed", "statusDetails": {"message": "AssertionError: assert 500 == 400\n +  where 500 = <Response [500]>.status_code", "trace": "login_reglaments = <requests.sessions.Session object at 0x000001D138623ED0>, reglament_column_id = 10\n\n    @allure.title('POST /reglaments')\n    @pytest.mark.parametrize('reglament_column_id', valid_ids)\n    def test_4_create_reglament(login_reglaments, reglament_column_id):\n        response = login_reglaments.post(HOST + '/reglaments', json={\n            \"name\": \"string\",\n            \"reglamentColumnId\": reglament_column_id,\n            \"content\": \"string\",\n            \"order\": 0\n        })\n>       assert response.status_code == 400\nE       assert 500 == 400\nE        +  where 500 = <Response [500]>.status_code\n\ntests\\6 test_reglaments\\test_reglaments.py:48: AssertionError"}, "parameters": [{"name": "reglament_column_id", "value": "10"}], "start": 1694694283911, "stop": 1694694283922, "uuid": "365f439b-9f05-41dc-b525-d20c92d55602", "historyId": "5e2245ef84837c448ba65dee2657b752", "testCaseId": "7df0468ff26bc01cf18bc77dc13558b6", "fullName": "tests.6 test_reglaments.test_reglaments#test_4_create_reglament", "labels": [{"name": "parentSuite", "value": "tests.6 test_reglaments"}, {"name": "suite", "value": "test_reglaments"}, {"name": "host", "value": "WIN-V4MLJNPG1BI"}, {"name": "thread", "value": "10480-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.6 test_reglaments.test_reglaments"}]}